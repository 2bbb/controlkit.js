@import "_resets";
@import "_mixins";
@import "_presets";
@import "_images";

@mixin component-border {
  @include border-radius($compBorderRadius);
  border-bottom: $compBorderBottom;
}

@mixin component-input-border {
  border: none;
  @include box-shadow($compInsetShadow);
  @include component-border;
}

/*
 *
 * TODO: DATA URL TO SVG
 */

#controlKit {
  .panel {

    position: absolute;
    left: 0;
    top: 0;
    z-index: 1;

    margin: 0;
    padding: 0;

    width: 300px;

    background-color: $panelColorBg;

    @include box-shadow($panelBoxShadow);

    font-family: $defaultFontFamily;

    @include user-select;

    @include box-sizing(border-box);
    @include border-radius($panelBorderRadius);

    overflow: hidden;

    opacity:1.0;

    /*-------------------------------------------------------------------------------------
     * Inputs
     *-------------------------------------------------------------------------------------*/

    input[type='text'], textarea {
      @include box-sizing(border-box);

      height: $inputHeight;
      width: 100%;
      padding: $inputPadding;

      font-family: $inputFontFamily;
      font-size:   $inputFontSize;
      color:       $inputFontColor;
      text-shadow: $inputFontShadow;

      @include linear-gradient-with-background(#{$inputGradient}, $inputColorBg);

      @include component-input-border;
    }

    textarea {
      padding: $textareaPadding;
      overflow: hidden;
      resize: none;
      vertical-align: top;
      white-space: nowrap;
    }

    .button, .select, .selectActive {
      @include box-sizing(border-box);

      width: 100%;
      height: $buttonHeight;
      margin: $buttonMargin;

      cursor: pointer;

      @include linear-gradient-with-background(#{$buttonGradient}, $buttonBgColor);

      font-family: $buttonFontFamily;
      color: $buttonFontColor;

      border: none;
      @include border-radius($buttonBorderRadius);
      @include box-shadow($buttonBoxShadow);
      border-bottom: $compBorderBottom;
    }

    .button {
      font-size: $buttonFontSize;
      font-weight: $buttonFontWeight;
      text-shadow: $buttonTextShadow;
      text-transform: $buttonTextTransform;

      &:hover {
        background-image: none;
      }
      &:active {
        @include linear-gradient($buttonGradientActive);
      }

    }

    .select, .selectActive {
      padding-left: 10px;
      padding-right: 20px;

      font-size: $compFontSize;
      text-align: left;
      text-shadow: $inputFontShadow;

      cursor: pointer;

      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;

    }

    .select {
      @include linear-gradient-with-image(#{$selectGradient}, $imageSelect 100% 50% no-repeat);
    }

    .select:hover, .selectActive {
      background: $imageSelect 100% 50% no-repeat, #3c494e;
    }

    .presetBtn, .presetBtnActive {
      @include box-sizing(border-box);

      position: absolute;
      right: 1px;

      width: $buttonPresetWidth;
      height: $buttonPresetHeight;
      margin: 1px 0 0 0;

      cursor: pointer;

      float: right;

      border: none;
      border-top-right-radius: $buttonBorderRadius;
      border-bottom-right-radius: $buttonBorderRadius;
      border-left: $buttonPresetBorderLeft;

      @include box-shadow($buttonPresetBoxShadow);
    }

    .presetBtnActive, .presetBtn:hover {
      background: $imageBtnPreset 50% 50% no-repeat, #3c494e;
    }
    .presetBtn {
      @include linear-gradient-with-image(#{$buttonPresetGradient}, $imageBtnPreset 50% 50% no-repeat);
    }

    .scrollBar {
      @include box-sizing(content-box);

      width: $scrollBarWidth;
      height: 100%;
      float: right;
      top: 0;
      padding: 0;
      margin: 0;
      position: relative;

      @include h-linear-gradient-with-background(#{$scrollBarGradient}, $scrollBarBgColor);

      .track {
        padding: $scrollBarTrackPadding;

        .thumb {
          @include box-sizing(border-box);

          width: $scrollBarThumbWidth;
          position: absolute;

          cursor: pointer;

          @include linear-gradient-with-background(#{$scrollBarThumbGradient}, $scrollBarThumbBgColor);
          @include border($scrollBarThumbBorder, $scrollBarThumbBorderRadius);

          @include box-shadow($scrollBarThumbBoxShadow);
        }
      }
    }

    /*-------------------------------------------------------------------------------------
     * Head & Label
     *-------------------------------------------------------------------------------------*/

    .label {
      width: 100%;

      float: left;
      font-size: $labelFontSize;
      font-weight: $labelFontWeight;
      text-shadow: $labelTextShadow;

      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      cursor: default;
    }

    .head, .panelHeadInactive {
      height: $panelHeadHeight;
      padding: $panelHeadPadding;
      background: $panelHeadColorBg;
    }

    .head {
      border-top: $panelHeadBorderTop;
      border-bottom: $panelHeadBorderBottom;

      .label {
        cursor: pointer;

        line-height: $panelHeadHeight;
        color: $panelHeadLabelFontColor;
      }
    }

    .panelHeadInactive {
      border-top: $panelHeadInactiveBorderTop;
    }

    /*-------------------------------------------------------------------------------------
     * Menu
     *-------------------------------------------------------------------------------------*/

    .menu {
      float: right;
      padding: $menuPadding;

      input[type='button'] {
        @include box-sizing(border-box);

        cursor: pointer;

        height: $menuButtonHeight;
        margin-left: $menuButtonMarginLeft;
        border: none;

        @include border-radius($menuButtonBorderRadius);

        font-family: $menuButtonFontFamily;
        font-size: $menuButtonFontSize;
        font-weight: $menuButtonFontWeight;
        color: $menuButtonFontColor;
        text-shadow: $menuButtonTextShadow;
        text-transform: $menuButtonTextTransform;

        @include box-shadow($menuButtonBoxShadow);
        border-bottom: $menuButtonBorderBottom;
      }

      @mixin btnMenuBackground($img, $imgHover)
      {
        background: $img 50% 50% no-repeat, $menuButtonColorBg;
        &:hover {
          background: $imgHover 50% 50% no-repeat, $menuButtonHoverColorBg;
          @include box-shadow($menuButtonHoverBoxShadow);
        }
      }

      .btnHide, .btnShow, .btnClose {
        width: 20px;
      }

      .btnHide {
        @include btnMenuBackground($imageBtnHide, $imageBtnHideHover);
      }
      .btnShow {
        @include btnMenuBackground($imageBtnShow, $imageBtnShowHover);
      }
      .btnClose {
        @include btnMenuBackground($imageBtnClose, $imageBtnCloseHover);
      }

      .btnUndo {

        @include linear-gradient-with-image($imageBtnUndo 20% 50% no-repeat, #{$menuButtonGradient});

        padding: $menuButtonUndoPadding;
        width: $menuButtonUndoWidth;
        vertical-align: top;
        text-align: end;
        &:hover {
          background: $imageBtnUndoHover 20% 50% no-repeat, $menuButtonHoverColorBg;
        }
      }
    }

    /*-------------------------------------------------------------------------------------
    * Wraps
    *-------------------------------------------------------------------------------------*/

    .wrap {
      width: auto;
      height: auto;
      margin: 0;
      padding: 0;
      position: relative;
      overflow: hidden;
    }

    .inputWPresetWrap {
      width: 100%;
      float: left;

      input[type='text'] {
        padding-right: 25px;
      }
    }

    .textAreaWrap {

      @include box-sizing(border-box);

      width: 100%;
      padding: 0;
      float: left;
      height: 100%;

      overflow: hidden;

      border-radius: $textareaWrapBorderRadius;
      @include component-input-border;


      background-color: $textareaWrapColorBg;
      @include box-shadow($textareaWrapBoxShadow);
      @include linear-gradient($textareaWrapGradient);

      textarea {
        border:      none;
        //border-right: 1px solid #fff;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        @include border-radius($textareaWrapBorderRadius);
        @include box-shadow(none);
        background: none;
      }

      .scrollBar {
        border: $textareaWrapScrollBarBorder;
        border-bottom-right-radius: $textareaWrapBorderRadius;
        border-top-right-radius: $textareaWrapBorderRadius;
        border-left: none;
        @include box-shadow($textareaWrapBoxShadow);
      }
    }

    .scrollWrap {
      position: relative;
      overflow: hidden;
    }

    .scrollBuffer {
      width: 100%;
      height: $scrollBufferHeight;
      border-top: $scrollBufferBorderTop;
      border-bottom: $scrollBufferBorderBottom;

    }

    canvas {
      cursor: pointer;
      vertical-align: bottom;
      @include component-input-border;
    }

    .canvasWrap {
      margin: $canvasWrapMargin;

      width: 70%;
      float: right;

      @include box-sizing(border-box);

      border: none;
      @include border-radius($canvasWrapBorderRadius);

      background: $canvasWrapColorBg;
      @include linear-gradient($canvasWrapGradient);
    }

    /*-------------------------------------------------------------------------------------
     * Groups
     *-------------------------------------------------------------------------------------*/

    ul {
      margin: 0;
      padding: 0;
      list-style: none;
    }

    .groupList {

      .group {
        .head {
          height: $groupHeadHeight;

          border-top: $groupHeadBorderTop;
          border-bottom: $groupHeadBorderBottom;

          padding: $groupHeadPadding;

          @include linear-gradient($groupHeadGradient);
          cursor: pointer;

          .label {
            font-size: $groupHeadLabelFontSize;
            line-height: $groupHeadHeight;
            color: $groupHeadLabelFontColor;
          }

          &:hover {
            @include linear-gradient($groupHeadHoverGradient);
          }
        }

        li {
          height: $subGroupListItemHeight;
          padding: $subGroupListItemPadding;
        }

        .subGroupList {
          padding: $subGroupListPadding;
          border-top: $subGroupListBorderTop;
          border-bottom: $subGroupListBorderBottom;

          .subGroup {
            padding: 0;
            margin-top: $subGroupMarginTop;

            height: auto;

            @include border($subGroupBorder, $subGroupBorderRadius);
            @include box-shadow($subGroupBoxShadow);

            ul {
              overflow: hidden;
            }
            &:first-child {
              margin-top: 0;
            }

            .head {
              height: $subGroupHeadHeight;
              padding: $subGroupHeadPadding;

              border-top: $subGroupHeadBorderTop;
              border-bottom: $subGroupHeadBorderBottom;

              border-top-left-radius: $subGroupHeadBorderTopRadius;
              border-top-right-radius: $subGroupHeadBorderTopRadius;

              background-image: none;
              background-color: $subGroupHeadColorBg;

              cursor: pointer;

              &:hover {
                background-image: none;
                background-color: $subGroupHeadHoverColorBg;
              }

            }

            li {
              &:nth-child(odd) {
                background-color: $subGroupListItemColorBgOdd;
              }
              &:nth-child(even)
              {
                background-color: $subGroupListItemColorBgEven;
              }

            }





            .headInactive {
              @include box-sizing(border-box);

              height: $subGroupHeadInactiveHeight;
              padding: $subGroupHeadInactivePadding;

              @include linear-gradient($subGroupHeadInactiveGradient);
              @include box-shadow($subGroupHeadInactiveBoxShadow);

              cursor: pointer;

              &:hover {
                background-image: none;
                background-color: $subGroupHeadInactiveHoverColorBg;
              }
            }

            .head .label, .headInactive .label {
              margin: 0;
              padding: 0;
              line-height: $subGroupHeadHeight;
              color: $subGroupHeadLabelFontColor;
              font-weight: $subGroupHeadLabelFontWeight;
              font-size: $subGroupHeadLabelFontSize;
              text-shadow: $subGroupHeadLabelTextShadow;
              text-transform: $subGroupHeadLabelTextTransform;
            }

            .head, .headInactive {
              .wrap .label {
                width: 100%;
                font-weight: $subGroupHeadLabelFontWeight;
                color: $subGroupHeadLabelFontColor;
                padding: 0;
              }
            }


            .wrap {

              .label {
                @include box-sizing(border-box);
                height: 100%;

                width: $compLabelWidth;
                padding: $compLabelPadding;
                float: left;

                font-size: $compLabelFontSize;
                font-weight: $compLabelFontWeight;
                color: $compLabelFontColor;
                text-shadow: $compLabelTextShadow;

              }

              .wrap {
                @include box-sizing(border-box);

                width: $compWidth;
                padding: $compPadding;
                float: right;
                height: 100%;

                .wrap {
                  width: 25%;
                  padding: 0;
                  float: left;

                  .label {
                    width: 100%;
                    padding: $rangeLabelPadding;

                    color:          $rangeLabelFontColor;
                    text-align:     $rangeLabelTextAlign;
                    text-transform: $rangeLabelTextTransform;
                    font-weight:    $rangeLabelFontWeight;
                    text-shadow:    $rangeLabelTextShadow;


                  }

                  input[type='text'] {
                    padding: 0;
                    text-align: center;
                  }
                }
              }
            }

            .wrap{background: $subGroupHeadColorBg;}
            .wrap{.wrap{background: none;}}
          }

          .head .wrap, .headInactive .wrap{background:none;}
        }
        &:last-child {
          .subGroupList, .scrollBuffer:nth-of-type(3){border-bottom: none;}
          .scrollWrap .subGroupList{border-bottom: $subGroupListBorderBottom;}
        }

      }
    }

    /*-------------------------------------------------------------------------------------
     * Slider
     *-------------------------------------------------------------------------------------*/

    .wrapSlider {
      @include box-sizing(border-box);

      width: 70%;
      padding: 6px 0 0 0;
      float: right;
      height: 100%;

      input[type='text'] {
        width: 25%;
        text-align: center;
        padding: 0;
        float: right;
      }
    }

    .sliderWrap {

      @include box-sizing(border-box);

      float: left;
      cursor: ew-resize;

      width: $sliderWidth;
      //padding: $sliderPadding;

    }

    .sliderSlot {
      @include box-sizing(border-box);

      width: 100%;
      height: $sliderHeight;
      padding: $sliderPadding;

      background-color: $sliderSlotColorBg;
      @include component-input-border;
    }

    .sliderHandle {
      @include box-sizing(border-box);

      position: relative;
      width: 100%;
      height: 100%;

      @include linear-gradient-with-background(#{$sliderHandleGradient}, $sliderHandleColorBG);
      @include box-shadow($sliderHandleBoxShadow);
    }

    .canvasListItem {
      padding: $subGroupCanvasListItemPadding;
    }

    .arrowSMax {
      background: $imageArrowSMax center no-repeat;
    }
    .arrowSMin {
      background: $imageArrowSMin center no-repeat;
    }
    .arrowSMax, .arrowSMin {
      width: 100%;
      height: 20px;
    }

    .arrowBMax {
      background: $imageArrowBMax center no-repeat;
    }
    .arrowBMin {
      background: $imageArrowBMin center no-repeat;
    }

    .arrowBSubMax {
      background: $imageArrowBSubMax center no-repeat;
    }
    .arrowBSubMin {
      background: $imageArrowBSubMin center no-repeat;
    }

    .arrowBMax, .arrowBMin, .arrowBSubMax, .arrowBSubMin {
      width: 10px;
      height: 100%;
      float: right;
    }

    /*-------------------------------------------------------------------------------------
      * Picker
      *-------------------------------------------------------------------------------------*/

    .picker {
      @include box-sizing(border-box);
      @include border-radius(2px);
      background-color: #3c494e;

      font-family: arial, sans-serif;
      font-size: 11px;
      color: #fff;
      text-shadow: 1px 1px #000;

      cursor: pointer;

      position: absolute;
      z-index: 2147483631;

      width: 380px;
      height: 250px;

      overflow: hidden;

      @include user-select;
      @include box-shadow(0 0 1px 1px rgba(0, 0, 0, 0.95));

      .head {
        height: 30px;
        padding: 0 20px 0 10px;

        background-color: #1a1d1f;
        border-top: 1px solid #202426;
        border-bottom: 1px solid #111314;

        .label {
          float: left;
          font-size: 11px;
          font-weight: bold;
          text-shadow: 0 -1px #000;
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
          cursor: default;
          line-height: 30px;
        }

      }

      .wrap {
        position: relative;
        @include box-sizing(border-box);
        padding: 10px;
      }

      .paletteWrap {
        height: 160px;
      }

      .paletteWrapInner {
        padding: 3px;
        @include box-shadow(0 0 1px 3px rgba(0, 0, 0, 0.05) inset, 0 0 1px 1px #111314 inset);
        border: none;
        @include border-radius(2px);
        border-bottom: 1px solid #3b4447;

        background: #1e2224;

        margin-right: 5px;

        height: 100%;

        float: left;;

      }
    }
  }

  .options {
    @include box-sizing(border-box);
    @include border($optionsBorder,$optionsBorderRadius);

    position: absolute;

    left:   0;
    top:    0;
    width:  0;
    height: 0;


    /*
    left:   0;
    top:    0;
    width:  0;
    height: 0;
    */

    z-index: 2147483638;

    font-family: $optionsFontFamily;
    font-size:   $optionsFontSize;
    color:       $optionsFontColor;
    text-shadow: $optionsTextShadow;

    @include box-shadow($optionsBoxShadow);

    overflow: hidden;

    background-color: $optionsColorBg;

    ul {
      width: 100%;
      list-style: none;
      margin:  0;
      padding: 0;

      li
        {
        margin:      0;
        width: 100%;
        height:      $optionsListItemHeight;
        line-height: $optionsListItemHeight;
        padding:     $optionsListItemPadding;

        overflow:      hidden;
        white-space:   normal;
        text-overflow: ellipsis;

        cursor: pointer;

        &:hover {
          background-color: $optionsListItemHoverColorBg;
        }
      }

      .liSelected {
        background-color: $optionsListItemSelectedColorBg;
      }

      .liColor {

        &:hover {
        }
      }

      .liColorSelected {
      }
    }

  }

}

#controlKitTrigger {

}